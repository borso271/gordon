/* Base container styling (applies to both scenarios) */
.container {
    display: flex;
    flex-direction: column;
    width: 100%;
    background-color: var(--black-900);
    gap: 16px;
  }
  
  /* Fixed at the bottom (classic chat scenario) */
  .fixed {
    position: fixed;
    bottom: 0;
    left: 50%; /* Center horizontally */
    transform: translateX(-50%);
    max-width: 796px; /* Limit width so it doesn't stretch entire screen */
    margin: 0 auto;
    padding: 24px 0;
    /* height: auto; */
     height: 151px;
    
  
  }
  
  /* Centered (first prompt scenario) */

    .centered {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 24px 16px;
      }
      
  
  
  /* The inner container for content alignment */
  .innerContainer {
    margin: 0 auto;
    width: 100%;
    max-width: 796px;
    display:flex;
    flex-direction:column;
    gap: 16px;
  }
  
  .form {
    width: 100%;
  }
  
  .inputForm {
    display: flex;
    gap: 16px;
  }
  
  .input {
    flex: 1;
    color: var(--Black-500, #555);
    font-family: Inter, sans-serif;
    font-size: 30px;
    font-weight: 500;
    line-height: 125%;
    letter-spacing: -0.6px;
    background: transparent;
    border: none;
    outline: none;
    padding: 0;
    caret-color: white;
  }
  

  /* ðŸ‘‡ This ensures the caret is visible even when the placeholder is shown */
.input:placeholder-shown {
  caret-color: white; /* Default caret visible before typing */
}

  .input::placeholder {
color: var(--black-500, #535353);
font-family: var(--font-family-inter);
font-size: var(--font-size-xl);
font-style: normal;
font-weight: var(--font-weight-medium);
line-height: var(--line-height-125); /* 37.5px */
letter-spacing: var(--letter-spacing-xl);
  }
  
  .button {
    padding: 12px 16px;
    font-size: 16px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
    background-color: #007bff;
    color: #fff;
  }
  
  .button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
  
  .buttonGroup {
    display: flex;
    flex-direction: row;
    gap: 16px;
    justify-content: flex-end;
  }
  


.botHeading {
    margin-bottom:8px;
}


.container:before {


  content: "";
  position: absolute;
  left: 0;
  width: 100%;
  height: 30px;
  top: -30px;
  
  pointer-events: none; /* Ensures it doesn't interfere with scrolling */



  background: linear-gradient(
      to bottom, 
      rgba(15, 15, 15, 0) 0%,     /* Fully transparent at the top */
      rgba(15, 15, 15, 0.7) 50%,  /* Intermediate step at 50% opacity */
      var(--background) 100%   /* Fully opaque at the bottom */
  );

}




/* Medium (Tablets) */
@media (max-width: 768px) {
    .fixed {
    padding: 20px;
    }

    .buttonGroup {
        gap: 14px;
    }



.botHeading {
    margin-bottom:4px;
}

  .input, .input::placeholder {
    color: var(--Black-500, #535353);

    /* H3/Medium */
    font-family: Inter;
    font-size: 26px;
    font-style: normal;
    font-weight: 500;
    line-height: 125%; /* 32.5px */
    letter-spacing: -0.52px;
      }


}

/* Small (Mobile) */
@media (max-width: 480px) {
  .buttonGroup {
    gap: 12px;
    }



.botHeading {
    margin-bottom:0px;
}
    .input, .input::placeholder {
    color: var(--Black-500, #535353);

    /* Text L/Medium */
    font-family: Inter;
    font-size: 18px;
    font-style: normal;
    font-weight: 500;
    line-height: 130%; /* 23.4px */
      }


      .fixed {
       
        /* height: auto; */
         height: 121px;
        
      
      }
  
}

.fixedButton {
  
        position: fixed; /* âœ… Fixes button in place */
        right: 20px; /* âœ… 20px from the right */
        bottom: 20px; /* âœ… 20px from the bottom */
}

/* 
.customCaret {
  position: absolute;
  right: 12px;
  font-size: 16px;
  color: white;
  animation: blink 1s infinite;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}  */
